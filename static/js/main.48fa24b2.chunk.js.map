{"version":3,"sources":["components/UI/Container.jsx","components/Navigation/index.jsx","layouts/Layout.jsx","components/Book/index.jsx","components/UI/Acardion.jsx","pages/Books.jsx","redux/redusers/datafinalform.js","pages/FinalForm/Finish.jsx","components/UI/Input.jsx","components/UI/Button.jsx","pages/FinalForm/Step1.jsx","components/UI/InputPassword.jsx","pages/FinalForm/Step2.jsx","components/UI/InputImage.jsx","pages/FinalForm/Step3.jsx","pages/FinalForm/FinalForm.jsx","pages/RecLIst.jsx","components/Forms/ValidateForm.jsx","pages/ReduxForm.jsx","App.jsx","reportWebVitals.js","redux/redusers/reduxForm.js","redux/store.js","index.js"],"names":["Container","children","Wraper","styled","div","Navigation","links","ListLinks","map","href","title","exact","ItemLinks","to","activeClassName","header","ul","li","Layout","Book","author","date","img","id","src","alt","Description","Acardion","arr","useState","open","setOpen","onClick","pre","width","height","viewBox","fill","xmlns","d","ListBoks","item","name","getDateNum","split","reverse","reduce","ac","n","sortBooksArr","books","sort","a","b","booksObj","acum","el","Books","console","log","Section","Object","keys","key","section","SET_DATA_FINAL_FORM","dataForm","state","action","type","data","Finish","List","Item","images","lastName","login","Input","input","placeholder","label","meta","touched","error","WarningMessage","WraperInput","focus","active","autoComplete","valid","WraperIcon","cx","cy","r","x","y","rx","transform","span","Button","color","props","button","formateName","str","slice","toUpperCase","validate","values","errors","match","Step1","addData","push","onSubmit","obj","render","handleSubmit","form","submitting","pristine","noValidate","component","parse","value","WraperBtn","disabled","reset","InputPassword","setType","ToggleBtn","p","password","confirm","Step2","InputImage","setFiles","multiple","useRef","ref","current","click","onchange","e","target","files","length","formatFiles","Step3","drag","setDrag","checkedFiles","setCheckedFiles","preview","setPreview","useEffect","filescheck","formats","filter","file","find","includes","checkFiles","alert","join","forEach","reader","FileReader","onloadend","result","readAsDataURL","dragStart","preventDefault","dragLeave","DragContainer","border","onDragStart","onDragLeave","onDragOver","onDrop","dataTransfer","ListImage","image","i","FinalForm","count","useHistory","useSelector","dispatch","useDispatch","Title","path","h1","reduxForm","username","email","test","age","isNaN","Number","Field","ReduxForm","val","listArr","items","recF","darkTheme","createTheme","palette","mode","Lists","Accordion","AccordionSummary","expandIcon","aria-controls","Typography","AccordionDetails","RecLIst","ThemeProvider","theme","style","marginBottom","marginTop","foo","fee","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SET_ACCOUNT_FORM","rootRedusers","combineReducers","account","formReducer","store","createStore","ReactDOM","document","getElementById"],"mappings":"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IAAOC,IAAV,oG,iFFvBRuM,GAAU,CACV,CACIjM,MAAO,uCACPkM,MAAO,CACH,CAAClM,MAAO,mIACJkM,MAAO,CACH,CACIlM,MAAO,sHACPkM,MAAO,CACH,CAAClM,MAAO,yDAAakM,MAAO,CACpB,CAAClM,MAAO,uCAAUkM,MAAO,CACjB,CAAClM,MAAO,0DACR,CAACA,MAAO,0DACR,CAACA,MAAO,0DACR,CAACA,MAAO,oEAGxB,CAACA,MAAO,0DACR,CAACA,MAAO,0DACR,CAACA,MAAO,8CACR,CAACA,MAAO,sDAGhB,CAACA,MAAO,0GAAsBkM,MAAO,CAC7B,CAAClM,MAAO,wCACR,CAACA,MAAO,0DACR,CAACA,MAAO,wCACR,CAACA,MAAO,6EACR,CAACA,MAAO,+FACR,CAACA,MAAO,0DACR,CAACA,MAAO,wCACR,CAACA,MAAO,2GACR,CAACA,MAAO,sDAEhB,CAACA,MAAO,4HAAyBkM,MAAO,CAChC,CAAClM,MAAO,0DACR,CAACA,MAAO,oDACR,CAACA,MAAO,8CACR,CAACA,MAAO,oDACR,CAACA,MAAO,wEACR,CAACA,MAAO,kCACR,CAACA,MAAO,mFACR,CAACA,MAAO,oDACR,CAACA,MAAO,oDACR,CAACA,MAAO,8CACR,CAACA,MAAO,gEACR,CAACA,MAAO,kEAEhB,CAACA,MAAO,0GAAsBkM,MAAO,CAC7B,CAAClM,MAAO,0DACR,CAACA,MAAO,oDACR,CAACA,MAAO,sGACR,CAACA,MAAO,4BACR,CAACA,MAAO,kCACR,CAACA,MAAO,0DACR,CAACA,MAAO,uEACR,CAACA,MAAO,8CACR,CAACA,MAAO,oDACR,CAACA,MAAO,0DACR,CAACA,MAAO,0DACR,CAACA,MAAO,0CAEhB,CAACA,MAAO,gHAAuBkM,MAAO,CAC9B,CAAClM,MAAO,wCACR,CAACA,MAAO,wCACR,CAACA,MAAO,oDACR,CAACA,MAAO,0CAEhB,CAACA,MAAO,oGAAqBkM,MAAO,CAC5B,CAAClM,MAAO,wCACR,CAACA,MAAO,sDAEhB,CAACA,MAAO,wFAAmBkM,MAAO,CAC1B,CAAClM,MAAO,4BACR,CAACA,MAAO,gEACR,CAACA,MAAO,oDACR,CAACA,MAAO,kCACR,CAACA,MAAO,wCACR,CAACA,MAAO,4BACR,CAACA,MAAO,wCACR,CAACA,MAAO,wCACR,CAACA,MAAO,gEACR,CAACA,MAAO,0DACR,CAACA,MAAO,uHACR,CAACA,MAAO,8CACR,CAACA,MAAO,wCACR,CAACA,MAAO,wCACR,CAACA,MAAO,kCACR,CAACA,MAAO,0DACR,CAACA,MAAO,oDACR,CAACA,MAAO,8CACR,CAACA,MAAO,0CAEhB,CAACA,MAAO,oGAAqBkM,MAAO,SAqBxDD,IAZelB,GAYC,EAXL,SAASoB,EAAKjL,GACjB,OAAOA,EAAIpB,KAAI,SAAAoB,GAEX,OADA6J,KACG7J,EAAIgL,MACI,2BAAIhL,GAAX,IAAgBL,GAAIkK,GAAOmB,MAAM,YAAKC,EAAKjL,EAAIgL,UAE5C,2BAAIhL,GAAX,IAAgBL,GAAIkK,UAKbkB,IAInB,IAAMG,GAAYC,aAAY,CAC1BC,QAAS,CACLC,KAAM,WAyBRC,GAAQ,SAARA,EAAS,GAAoB,IAAnBxM,EAAkB,EAAlBA,MAAOkM,EAAW,EAAXA,MACnB,OACI,eAACO,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CACIC,WAAY,cAAC,KAAD,IACZC,gBAAc,kBACd/L,GAAG,iBAHP,SAKA,cAACgM,GAAA,EAAD,UAAa7M,MAGZkM,EAAMpM,KAAI,YAAwB,IAAtBE,EAAqB,EAArBA,MAAOkM,EAAc,EAAdA,MAAOrL,EAAO,EAAPA,GACvB,OAAGqL,EAGK,cAACY,GAAA,EAAD,UACI,cAACN,EAAD,CAAOxM,MAAOA,EAAOkM,MAAOA,KADTrL,GAM3B,cAACiM,GAAA,EAAD,UACI,cAACD,GAAA,EAAD,UAAa7M,KADMa,UAW5BkM,GArDC,WACZ,OACI,cAACC,GAAA,EAAD,CAAeC,MAAOb,GAAtB,SACI,eAAC,EAAD,WACI,oBAAIc,MAAO,CAACC,aAAc,GAAIC,UAAW,IAAzC,wHACA,6BACKnB,GAAQnM,KAAI,YAAwB,IAAtBE,EAAqB,EAArBA,MAAOkM,EAAc,EAAdA,MAAOrL,EAAO,EAAPA,GACzB,OACI,6BACI,cAAC,GAAD,CAAOb,MAAOA,EAAOkM,MAAOA,KADvBrL,cGvI/B8B,GAAI,CACR0K,IAAK,EACLC,IAAK,GAmBQC,OAhBf,WAIE,OACE,cAAC,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOlC,KAAK,IAAIpL,OAAK,EAArB,SAAuB,cAAC,EAAD,CAAOyC,EAAGC,OACjC,cAAC,IAAD,CAAO0I,KAAK,cAAZ,SAA0B,cAAC,GAAD,MAC1B,cAAC,IAAD,CAAOA,KAAK,cAAZ,SAA0B,cAAC,GAAD,CAAWrL,MAAM,iBAC3C,cAAC,IAAD,CAAOqL,KAAK,YAAZ,SAAwB,cAAC,GAAD,YCZjBmC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,SCPRQ,GAAmB,mB,UCMnBC,GAAeC,aAAgB,CACjCC,QDDmB,WAAyB,IAAxB3K,EAAuB,uDAAf,GAAIC,EAAW,uCAC3C,OAAQA,EAAOC,MAEX,KAAKsK,GACD,MAAO,CACHrK,KAAMF,EAAOE,MAGrB,QACI,OAAOH,ICPfD,WACAoD,KAAMyH,OAGGC,GAAQC,aAAYL,ICHjCM,IAAS9H,OACP,cAAC,IAAD,CAAU4H,MAAOA,GAAjB,SACE,cAAC,IAAD,UACE,cAAC,GAAD,QAGJG,SAASC,eAAe,SAM1BlB,O","file":"static/js/main.48fa24b2.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nfunction Container({ children }) {\r\n    return (\r\n        <Wraper>\r\n            {children}\r\n        </Wraper>\r\n    )\r\n}\r\n\r\nexport default Container;\r\n\r\n\r\nconst Wraper = styled.div`\r\n    max-width: 1170px;\r\n    padding: 0 15px;\r\n    margin: 0 auto;\r\n`;\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport Container from '../UI/Container';\r\n\r\nfunction Navigation({ links }) {\r\n\r\n\r\n\r\n    return (\r\n        <Wraper>\r\n            <Container>\r\n                <ListLinks>\r\n                    {links.map(({ href, title, exact }) => {\r\n                        return (\r\n                            <ItemLinks key={title}>\r\n                                <NavLink to={href} exact={exact} activeClassName='active-link'>{title}</NavLink>\r\n                            </ItemLinks>\r\n                        )\r\n                    })}\r\n                </ListLinks>\r\n            </Container>\r\n        </Wraper>\r\n    )\r\n}\r\n\r\nexport default Navigation;\r\n\r\nconst Wraper = styled.header`\r\n    background-color: white;\r\n`;\r\n\r\nconst ListLinks = styled.ul`\r\n    display: flex;\r\n    padding: 15px 0;\r\n`;\r\n\r\nconst ItemLinks = styled.li`\r\n    margin-right: 15px;\r\n\r\n    .active-link {\r\n        border-bottom: 1px solid black;\r\n    }\r\n`;\r\n","import React from 'react'\r\nimport Navigation from '../components/Navigation';\r\n\r\n\r\nconst links = [\r\n    { title: 'Главная', href: '/', exact: true },\r\n    { title: 'Redux-form', href: '/redux-form', exact: false },\r\n    { title: 'Final-form', href: '/final-form', exact: false },\r\n    { title: 'Рекурсивный список', href: '/rec-list', exact: false },\r\n]\r\n\r\nfunction Layout({ children }) {\r\n    return (\r\n        <>\r\n            <Navigation links={links} />\r\n            {children}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Layout;\r\n\r\n\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nfunction Book({ title, author, date, img, id }) {\r\n    return (\r\n        <Wraper>\r\n            <img src={img} alt={`book`} />\r\n            <Description>\r\n                <li>\r\n                    <h4>{`Название: ${title}`}</h4>\r\n                </li>\r\n                <li>\r\n                    <h5>{`Дата: ${date}`}</h5>\r\n                </li>\r\n                <li>\r\n                    <h5>{`Автор: ${author}`}</h5>\r\n                </li>\r\n                <li>\r\n                    <h5>{`id: ${id}`}</h5>\r\n                </li>\r\n            </Description>\r\n        </Wraper>\r\n    )\r\n}\r\n\r\nexport default Book;\r\n\r\nconst Wraper = styled.div`\r\n    padding: 10px;\r\n    background-color: #ffffff;\r\n    margin-top: 5px;\r\n    display: flex;\r\n    border-radius: 5px;\r\n\r\n    \r\n\r\n    img {\r\n        width: 100px;\r\n        height: auto;\r\n    }\r\n`;\r\n\r\nconst Description = styled.ul`\r\n    margin-left: 15px;\r\n\r\n    li {\r\n        margin-bottom: 5px;\r\n    }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Book from '../Book';\r\n\r\n\r\nfunction Acardion({ title, arr }) {\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const acardionToggle = () => {\r\n        setOpen(pre => !pre);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Wraper onClick={acardionToggle} open={open}>\r\n                <h3>{`${title} год`}</h3>\r\n\r\n                <svg width=\"12\" height=\"20\" viewBox=\"0 0 6 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M5.7154 4.6098L1.26527 0.159755C1.16235 0.0567475 1.02495 0 0.878448 0C0.731945 0 0.594548 0.0567475 0.491622 0.159755L0.163901 0.487394C-0.0493491 0.700889 -0.0493491 1.04788 0.163901 1.26105L3.90078 4.99793L0.159755 8.73895C0.0568288 8.84196 0 8.97928 0 9.1257C0 9.27228 0.0568288 9.4096 0.159755 9.51269L0.487476 9.84025C0.590483 9.94325 0.727799 10 0.874302 10C1.0208 10 1.1582 9.94325 1.26113 9.84025L5.7154 5.38614C5.81857 5.2828 5.87524 5.14484 5.87491 4.99817C5.87524 4.85094 5.81857 4.71305 5.7154 4.6098Z\" fill=\"#3B434E\" />\r\n                </svg>\r\n            </Wraper>\r\n\r\n            {open && <ListBoks>\r\n                {arr.map(item => {\r\n                    const { name, author, date, img, id } = item;\r\n                    return (\r\n                        <Book\r\n                            title={name}\r\n                            author={author}\r\n                            date={date}\r\n                            img={img}\r\n                            id={id}\r\n                            key={id + name}\r\n                        />\r\n                    )\r\n                })}\r\n            </ListBoks>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Acardion;\r\n\r\nconst Wraper = styled.div`\r\n    padding: 15px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    background-color: white;\r\n    border-radius: 5px;\r\n    margin-top: 15px;\r\n    user-select: none;\r\n    cursor: pointer;\r\n\r\n    svg {\r\n        transform: ${({ open }) => open ? 'rotate(90deg)' : 'rotate(180deg)'};\r\n        transition: .4s;\r\n    }\r\n`;\r\n\r\nconst ListBoks = styled.ul`\r\n    animation: 'fade' .6s;\r\n    user-select: none;\r\n`;\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nimport { books } from '../books.json';\r\nimport Acardion from '../components/UI/Acardion';\r\nimport Container from '../components/UI/Container';\r\n\r\nconst sortYear = (arr) => {\r\n    return arr.reduce((acum, el) => {\r\n\r\n        const date = el.date.split('.')[2];\r\n        return {\r\n            ...acum,\r\n            [date]: acum[date] ? [...acum[date], el] : [el]\r\n        }\r\n    }, {})\r\n}\r\n\r\n\r\nconst getDateNum = (date) => {\r\n    let dateArr = date.split('.').reverse();\r\n    return +dateArr.reduce((ac, n) => ac + n, '');\r\n}\r\n\r\nconst sortBooksArr = books.sort((a, b) => getDateNum(b.date) - getDateNum(a.date));\r\n\r\nconst booksObj = sortYear(sortBooksArr);\r\n\r\nfunction Books({ a }) {\r\n\r\n    console.log(a);\r\n\r\n    return (\r\n        <Section>\r\n            <Container>\r\n                {Object.keys(booksObj).reverse().map(key => {\r\n                    const arr = booksObj[key];\r\n                    return (\r\n                        <Acardion title={key} arr={arr} key={key} />\r\n                    )\r\n                })}\r\n\r\n\r\n            </Container>\r\n\r\n        </Section>\r\n    )\r\n}\r\n\r\nexport default Books;\r\n\r\nconst Section = styled.section`\r\n  padding: 50px 0;\r\n`;\r\n\r\n\r\n\r\n\r\n","const SET_DATA_FINAL_FORM = 'SET_DATA_FINAL_FORM';\r\n\r\n\r\n\r\nconst initialState = null;\r\n\r\n\r\nconst dataForm = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_DATA_FINAL_FORM:\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\n\r\nexport default dataForm;\r\n\r\n\r\nexport const setDataFinalForm = (data) => ({ type: SET_DATA_FINAL_FORM, data });","import React from 'react'\r\nimport { Redirect } from 'react-router';\r\nimport styled from 'styled-components';\r\n\r\nfunction Finish({ dataForm }) {\r\n\r\n    if (!dataForm) {\r\n        return (\r\n            <Redirect to=\"/final-form\" />\r\n        )\r\n    }\r\n    return (\r\n        <Wraper>\r\n            <List>\r\n                <Item>\r\n                    <img src={dataForm.images[0]} alt=\"photoUser\" />\r\n                </Item>\r\n                <Item>\r\n                    <p>{`Имя: ${dataForm.name}`}</p>\r\n                </Item>\r\n                <Item>\r\n                    <p>{`Фамилия: ${dataForm.lastName}`}</p>\r\n                </Item>\r\n                <Item>\r\n                    <p>{`Логин: ${dataForm.login}`}</p>\r\n                </Item>\r\n            </List>\r\n        </Wraper>\r\n    )\r\n}\r\n\r\nexport default Finish;\r\n\r\nconst Wraper = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 50px;\r\n`;\r\n\r\nconst List = styled.div`\r\n    background-color: white;\r\n    padding: 30px;\r\n`;\r\n\r\nconst Item = styled.div`\r\n    img {\r\n        max-width: auto;\r\n        height: 300px;\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\n\r\nfunction Input({ input, placeholder, label, meta }) {\r\n    return (\r\n        < Wraper>\r\n            {meta.touched && meta.error && <WarningMessage>{meta.error}</WarningMessage>}\r\n            <label>{label}</label>\r\n            <WraperInput error={meta.touched && meta.error} focus={meta.active}>\r\n                <input  {...input} placeholder={placeholder} autoComplete={'off'} />\r\n                {meta.valid &&\r\n                    <WraperIcon>\r\n                        <svg width=\"20\" height=\"20\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <circle cx=\"15\" cy=\"15\" r=\"15\" fill=\"#1DC37E\" />\r\n                            <path d=\"M21.276 12.4269L14.2422 19.4603C13.7213 19.9812 12.8764 19.9812 12.355 19.4603L8.72405 15.8291C8.20299 15.3081 8.20299 14.4631 8.72405 13.942C9.24522 13.4208 10.0901 13.4208 10.611 13.9418L13.2989 16.6297L19.3888 10.5397C19.91 10.0185 20.7549 10.0189 21.2759 10.5397C21.7968 11.0608 21.7968 11.9055 21.276 12.4269Z\" fill=\"white\" />\r\n                        </svg>\r\n                    </WraperIcon>}\r\n                {meta.touched && meta.error &&\r\n                    <WraperIcon>\r\n                        <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <circle cx=\"10\" cy=\"10\" r=\"10\" fill=\"#EE1E1E\" />\r\n                            <rect x=\"5.96912\" y=\"13.649\" width=\"10.6555\" height=\"1.38984\" rx=\"0.694922\" transform=\"rotate(-45 5.96912 13.649)\" fill=\"white\" />\r\n                            <rect x=\"7.01294\" y=\"6\" width=\"10.6555\" height=\"1.38984\" rx=\"0.694922\" transform=\"rotate(45 7.01294 6)\" fill=\"white\" />\r\n                        </svg>\r\n                    </WraperIcon>}\r\n            </WraperInput>\r\n\r\n        </Wraper>\r\n    )\r\n}\r\n\r\nexport default Input;\r\n\r\nconst WraperIcon = styled.div`\r\n    display: inherit;\r\n    padding: 0 10px;\r\n    /* width: 40px;\r\n    height: 40px; */\r\n`;\r\n\r\nconst WraperInput = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    position: relative;\r\n    outline: ${({ error }) => error ? '1px solid #ee1e1e' : '1px solid #979797'};\r\n    background-color: white;\r\n    width: 350px;\r\n\r\n     input {\r\n        padding: 10px;\r\n        border: none;\r\n        font-size: 16px;\r\n        transition-duration: .3s;\r\n        outline: none;\r\n        flex: 1;\r\n        \r\n    }\r\n`;\r\n\r\nconst WarningMessage = styled.span`\r\n   color: #ee1e1e;\r\n   font-weight: 600;\r\n   position: absolute;\r\n   right: 0;\r\n   top: 0px;\r\n   font-size: 14px;\r\n\r\n`;\r\n\r\nconst Wraper = styled.div`\r\n    position: relative;\r\n    margin-bottom: 20px;\r\n    width: fit-content;\r\n\r\n    & label {\r\n        display: block;\r\n        margin-bottom: 5px;\r\n        font-size: 14px;\r\n    }\r\n\r\n    \r\n`;\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nfunction Button({ children, color, ...props }) {\r\n    return (\r\n        <Wraper {...props} color={color}>\r\n            {children}\r\n        </Wraper>\r\n    )\r\n}\r\n\r\nexport default Button;\r\n\r\nconst Wraper = styled.button`\r\n    font-weight: 600;\r\n    font-size: 14px;\r\n    padding: 12px 30px;\r\n    border: none;\r\n    background-color: ${({ color }) => color === 'primery' ? '#29c495' : '#d13535'};\r\n    color: white;\r\n    cursor: pointer;\r\n    /* border-radius: 20px; */\r\n\r\n    :disabled {\r\n        background-color: #a7a7a7;\r\n        color: #666666;\r\n    }\r\n`;\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { Form, Field } from 'react-final-form';\r\nimport Input from '../../components/UI/Input';\r\nimport Button from '../../components/UI/Button';\r\n\r\n\r\n\r\nconst formateName = (str) => str.slice(0, 1).toUpperCase() + str.slice(1);\r\n\r\nconst validate = (values) => {\r\n\r\n    const errors = {};\r\n    if (!values.name) {\r\n        errors.name = \"Обязательное поле\";\r\n    }\r\n    else if (!values.name.match(/^([^0-9]*)$/)) {\r\n        errors.name = \"Имя не может состоять из цифр\"\r\n    }\r\n    if (!values.lastName) {\r\n        errors.lastName = \"Обязательное поле\";\r\n    }\r\n    else if (!values.lastName.match(/^([^0-9]*)$/)) {\r\n        errors.lastName = \"Имя не может состоять из цифр\"\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\n\r\n\r\n\r\nfunction Step1({ title, addData, push }) {\r\n\r\n\r\n\r\n    const onSubmit = (obj) => {\r\n        addData(obj);\r\n        push('/final-form/step2');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>{title}</h2>\r\n\r\n            <Wraper>\r\n\r\n                <Form\r\n                    onSubmit={onSubmit}\r\n                    validate={validate}\r\n\r\n                    render={({ handleSubmit, form, submitting, pristine, values }) => (\r\n\r\n\r\n\r\n                        <form onSubmit={handleSubmit} noValidate>\r\n\r\n                            <Field\r\n                                name=\"name\"\r\n                                component={Input}\r\n                                type=\"text\"\r\n                                placeholder=\"Введите ваше имя\"\r\n                                label=\"Ваше имя\"\r\n                                parse={value => value && formateName(value)}\r\n                            />\r\n                            <Field\r\n                                name=\"lastName\"\r\n                                component={Input}\r\n                                type=\"text\"\r\n                                placeholder=\"Введите вашу Фамилию\"\r\n                                label=\"Ваша фамилия\"\r\n                                parse={value => value && formateName(value)}\r\n                            />\r\n                            <WraperBtn>\r\n                                <Button type='submit' color='primery' disabled={submitting}>Следущий шаг</Button>\r\n                                <Button onClick={form.reset} disabled={submitting || pristine}>Очистисть</Button>\r\n                            </WraperBtn>\r\n\r\n                        </form>\r\n                    )} />\r\n            </Wraper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Step1;\r\n\r\n\r\nconst Wraper = styled.div`\r\n    padding: 30px 0;\r\n\r\n    & h1 {\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst WraperBtn = styled.div`\r\n    display: flex;\r\n    \r\n    button {\r\n        margin-right: 10px;\r\n    }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\n\r\nfunction InputPassword({ input, placeholder, label, meta }) {\r\n\r\n    const [type, setType] = useState(input.type);\r\n\r\n    const changeType = () => {\r\n        if (type === 'password') {\r\n            setType('text');\r\n        } else setType('password');\r\n    }\r\n\r\n    return (\r\n        < Wraper>\r\n            {meta.touched && meta.error && <WarningMessage>{meta.error}</WarningMessage>}\r\n            <label>{label}</label>\r\n            <WraperInput error={meta.touched && meta.error} focus={meta.active}>\r\n                <input  {...input} placeholder={placeholder} autoComplete={'off'} type={type} />\r\n                {input.value && <ToggleBtn onClick={changeType}>{type === 'password' ? 'Показать' : 'Скрыть'}</ToggleBtn>}\r\n                {meta.valid &&\r\n                    <WraperIcon>\r\n                        <svg width=\"20\" height=\"20\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <circle cx=\"15\" cy=\"15\" r=\"15\" fill=\"#1DC37E\" />\r\n                            <path d=\"M21.276 12.4269L14.2422 19.4603C13.7213 19.9812 12.8764 19.9812 12.355 19.4603L8.72405 15.8291C8.20299 15.3081 8.20299 14.4631 8.72405 13.942C9.24522 13.4208 10.0901 13.4208 10.611 13.9418L13.2989 16.6297L19.3888 10.5397C19.91 10.0185 20.7549 10.0189 21.2759 10.5397C21.7968 11.0608 21.7968 11.9055 21.276 12.4269Z\" fill=\"white\" />\r\n                        </svg>\r\n                    </WraperIcon>}\r\n                {meta.touched && meta.error &&\r\n                    <WraperIcon>\r\n                        <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <circle cx=\"10\" cy=\"10\" r=\"10\" fill=\"#EE1E1E\" />\r\n                            <rect x=\"5.96912\" y=\"13.649\" width=\"10.6555\" height=\"1.38984\" rx=\"0.694922\" transform=\"rotate(-45 5.96912 13.649)\" fill=\"white\" />\r\n                            <rect x=\"7.01294\" y=\"6\" width=\"10.6555\" height=\"1.38984\" rx=\"0.694922\" transform=\"rotate(45 7.01294 6)\" fill=\"white\" />\r\n                        </svg>\r\n                    </WraperIcon>}\r\n            </WraperInput>\r\n\r\n        </Wraper>\r\n    )\r\n}\r\n\r\nexport default InputPassword;\r\n\r\nconst ToggleBtn = styled.p`\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    padding-right: 10px;\r\n    padding-left: 10px;\r\n    color: #616161;\r\n    cursor: pointer;\r\n    user-select: none;\r\n    margin: 0;\r\n`;\r\n\r\nconst WraperIcon = styled.div`\r\n    display: inherit;\r\n    padding: 10px;\r\n    /* width: 40px;\r\n    height: 40px; */\r\n`;\r\n\r\nconst WraperInput = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    position: relative;\r\n    outline: ${({ error }) => error ? '1px solid #ee1e1e' : '1px solid #979797'};\r\n    background-color: white;\r\n    width: 350px;\r\n\r\n     input {\r\n        padding: 10px;\r\n        border: none;\r\n        font-size: 16px;\r\n        transition-duration: .3s;\r\n        outline: none;\r\n        flex: 1;\r\n        \r\n    }\r\n`;\r\n\r\nconst WarningMessage = styled.span`\r\n   color: #ee1e1e;\r\n   font-weight: 600;\r\n   position: absolute;\r\n   right: 0;\r\n   top: 0px;\r\n   font-size: 14px;\r\n\r\n`;\r\n\r\nconst Wraper = styled.div`\r\n    position: relative;\r\n    margin-bottom: 20px;\r\n    width: fit-content;\r\n\r\n    & label {\r\n        display: block;\r\n        margin-bottom: 5px;\r\n        font-size: 14px;\r\n    }\r\n\r\n    \r\n`;\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { Field, Form } from 'react-final-form';\r\nimport { Redirect } from 'react-router'\r\nimport styled from 'styled-components';\r\nimport Button from '../../components/UI/Button';\r\nimport Input from '../../components/UI/Input';\r\nimport InputPassword from '../../components/UI/InputPassword';\r\n\r\n\r\n\r\nconst validate = (values) => {\r\n    const errors = {};\r\n    if (!values.login) {\r\n        errors.login = 'Обязательное поле';\r\n    }\r\n    else if (values.login.match(/[а-яА-Я]/)) {\r\n\r\n        errors.login = 'Только латинские символы';\r\n    }\r\n    if (!values.password) {\r\n        errors.password = 'Обязательное поле';\r\n    }\r\n    if (!values.confirm) {\r\n        errors.confirm = 'Обязательное поле';\r\n    }\r\n    else if (values.confirm !== values.password) {\r\n        errors.confirm = 'Пароли не совпадают';\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\nfunction Step2({ dataForm, addData, push, title }) {\r\n\r\n\r\n    const onSubmit = (obj) => {\r\n        addData(obj);\r\n        push('/final-form/step3');\r\n    }\r\n\r\n\r\n    if (!dataForm) {\r\n        return (\r\n            <Redirect to=\"/final-form\" />\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <h2>{title}</h2>\r\n\r\n            <Wraper>\r\n\r\n                <Form\r\n                    onSubmit={onSubmit}\r\n                    validate={validate}\r\n                    render={({ handleSubmit, form, submitting, pristine, values }) => (\r\n\r\n                        <form onSubmit={handleSubmit} noValidate>\r\n\r\n                            <Field\r\n                                name=\"login\"\r\n                                component={Input}\r\n                                type=\"text\"\r\n                                placeholder=\"Придумайте Login\"\r\n                                label=\"Login\"\r\n                            />\r\n\r\n                            <Field\r\n                                name=\"password\"\r\n                                component={InputPassword}\r\n                                type='password'\r\n                                placeholder='Введите пароль'\r\n                                label='Пароль'\r\n                                autoComplete='off'\r\n                            />\r\n                            <Field\r\n                                name=\"confirm\"\r\n                                component={InputPassword}\r\n                                type='password'\r\n                                placeholder='Введите пароль ещё раз'\r\n                                label='Пароль'\r\n                            ></Field>\r\n                            <WraperBtn>\r\n                                <Button color={'primery'} type='submit' disabled={submitting}>Следущий шаг</Button>\r\n                                <Button onClick={form.reset} disabled={submitting || pristine}>Очистисть</Button>\r\n                            </WraperBtn>\r\n\r\n                        </form>\r\n                    )} />\r\n            </Wraper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Step2;\r\n\r\n\r\nconst Wraper = styled.div`\r\n    padding: 30px 0;\r\n\r\n    & h1 {\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst WraperBtn = styled.div`\r\n    display: flex;\r\n    \r\n    button {\r\n        margin-right: 10px;\r\n    }\r\n`;","import React, { useRef } from 'react'\r\nimport styled from 'styled-components';\r\n\r\nfunction InputImage({ setFiles, multiple, children }) {\r\n\r\n    let input = useRef();\r\n\r\n\r\n    const clickBtnHandler = () => {\r\n        input.current.click();\r\n\r\n        input.current.onchange = (e) => {\r\n\r\n            if (e.target.files.length) {\r\n                setFiles([...e.target.files]);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Wraper>\r\n            <input ref={input} type=\"file\" multiple={multiple} />\r\n            <button onClick={clickBtnHandler}>{children}</button>\r\n        </Wraper>\r\n    )\r\n}\r\n\r\nexport default InputImage;\r\n\r\nconst Wraper = styled.div`\r\n    input {\r\n        display: none;\r\n        \r\n    }\r\n\r\n    button {\r\n        font-weight: 600;\r\n        font-size: 14px;\r\n        padding: 12px 30px;\r\n        border: solid 1px #29c495;\r\n        color: #29c495;\r\n        cursor: pointer;\r\n        background-color: white;\r\n    }\r\n\r\n`;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Redirect } from 'react-router';\r\nimport styled from 'styled-components';\r\nimport Button from '../../components/UI/Button';\r\nimport InputImage from '../../components/UI/InputImage';\r\n\r\nconst formatFiles = ['jpg', 'jpeg', 'png'];\r\n\r\nconst checkFiles = (files, formats) => {\r\n    return files.filter(file => formats.find(item => file.name.includes(item)))\r\n}\r\n\r\n\r\n\r\nfunction Step3({ dataForm, addData, push, title }) {\r\n\r\n    const [drag, setDrag] = useState(false);\r\n    const [files, setFiles] = useState(null);\r\n    const [checkedFiles, setCheckedFiles] = useState([]);\r\n    const [preview, setPreview] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (!files) {\r\n            return\r\n        }\r\n\r\n        const filescheck = checkFiles(files, formatFiles);\r\n\r\n        if (filescheck.length !== files.length) {\r\n            alert(`Не корректный формат файла. Разрешены ${formatFiles.join(', ')}`);\r\n            setCheckedFiles(filescheck);\r\n        } else setCheckedFiles(filescheck);\r\n    }, [files])\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        checkedFiles.forEach(file => {\r\n            const reader = new FileReader();\r\n\r\n            reader.onloadend = () => {\r\n                setPreview(pre => [...pre, reader.result])\r\n            }\r\n\r\n            reader.readAsDataURL(file);\r\n        })\r\n        return () => setPreview([]);\r\n    }, [checkedFiles])\r\n\r\n\r\n\r\n    const finishHandler = () => {\r\n        if (!preview.length) {\r\n            return\r\n        }\r\n        addData({ images: preview })\r\n        push('/final-form/finish');\r\n    }\r\n\r\n    const dragStart = (e) => {\r\n        e.preventDefault();\r\n        setDrag(true);\r\n    }\r\n\r\n    const dragLeave = (e) => {\r\n        e.preventDefault();\r\n        setDrag(false);\r\n    }\r\n\r\n    const onDropHandler = (e) => {\r\n        e.preventDefault();\r\n        const files = [...e.dataTransfer.files];\r\n        setFiles(files)\r\n        setDrag(false)\r\n    }\r\n\r\n    if (!dataForm) {\r\n        return (\r\n            <Redirect to=\"/final-form\" />\r\n        )\r\n    }\r\n    return (\r\n        <Wraper>\r\n            <h2>{title}</h2>\r\n            {drag\r\n\r\n                ? <DragContainer border={true}\r\n                    onDragStart={dragStart}\r\n                    onDragLeave={dragLeave}\r\n                    onDragOver={dragStart}\r\n                    onDrop={onDropHandler}\r\n                >Отпустите файлы, чтобы загрузить их</DragContainer>\r\n                : <DragContainer\r\n                    onDragStart={dragStart}\r\n                    onDragLeave={dragLeave}\r\n                    onDragOver={dragStart}\r\n                >Перетащите файлы, чтобы загрузить их</DragContainer>\r\n            }\r\n            <WraperBtn>\r\n\r\n                <Button onClick={() => setPreview([])} >Очистить</Button>\r\n                <InputImage multiple={true} setFiles={setFiles} >Загрузить</InputImage>\r\n                <Button onClick={finishHandler} color={'primery'}>Готово</Button>\r\n\r\n            </WraperBtn>\r\n            <ListImage>\r\n                {preview.map((image, i) => {\r\n                    return (\r\n                        <img src={image} alt=\"Привью\" key={i} />\r\n                    )\r\n                })}\r\n            </ListImage>\r\n        </Wraper>\r\n\r\n    )\r\n}\r\n\r\nexport default Step3;\r\n\r\nconst ListImage = styled.div`\r\n    margin-top: 30px;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: flex-start;\r\n    background-color: white;\r\n    width: fit-content;\r\n\r\n    img {\r\n        max-width: auto;\r\n        height: 150px;\r\n        margin: 6px;\r\n    }\r\n`;\r\n\r\nconst DragContainer = styled.div`\r\n    margin-top: 30px;\r\n    width: 50vh;\r\n    height: 30vh;\r\n    border: ${({ border }) => border ? '2px dashed #1baf72' : '2px dashed #e0e0e0'};\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    transition-duration: .4s;\r\n`;\r\n\r\n\r\n\r\nconst Wraper = styled.div`\r\n\r\n`;\r\n\r\nconst WraperBtn = styled.div`\r\n    display: flex;\r\n    margin-top: 20px;\r\n    \r\n    button {\r\n        margin-right: 10px;\r\n    }\r\n`;\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Route, Switch, useHistory } from 'react-router';\r\nimport styled from 'styled-components';\r\nimport Container from '../../components/UI/Container';\r\nimport { setDataFinalForm } from '../../redux/redusers/datafinalform';\r\nimport Finish from './Finish';\r\nimport Step1 from './Step1';\r\nimport Step2 from './Step2';\r\nimport Step3 from './Step3';\r\n\r\n\r\nfunction FinalForm({ title }) {\r\n\r\n    const { push } = useHistory();\r\n\r\n    const dataForm = useSelector(state => state.dataForm);\r\n    const dispatch = useDispatch();\r\n\r\n    const addData = (value) => {\r\n        dispatch(setDataFinalForm(value));\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Title>{title}</Title>\r\n            <Switch>\r\n                <Route exact path='/final-form'>\r\n                    <Step1\r\n                        title='Шаг 1'\r\n                        addData={addData}\r\n                        push={push} />\r\n                </Route>\r\n                <Route path='/final-form/step2'>\r\n                    <Step2\r\n                        dataForm={dataForm}\r\n                        push={push}\r\n                        addData={addData}\r\n                        title='Шаг 2' />\r\n                </Route>\r\n                <Route path='/final-form/step3'>\r\n                    <Step3\r\n                        dataForm={dataForm}\r\n                        push={push}\r\n                        addData={addData}\r\n                        title='Шаг 3' />\r\n                </Route>\r\n                <Route path='/final-form/finish'>\r\n                    <Finish dataForm={dataForm} />\r\n                </Route>\r\n            </Switch>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FinalForm;\r\n\r\nconst Title = styled.h1`\r\n    margin-top: 30px;\r\n    text-align: center;\r\n`;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Container from \"../components/UI/Container\";\r\n\r\n\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport Typography from '@mui/material/Typography';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport {createTheme, ThemeProvider} from \"@mui/material\";\r\n\r\n\r\nlet listArr = [\r\n    {\r\n        title: 'Россия',\r\n        items: [\r\n            {title: 'Южный федеральный округ',\r\n                items: [\r\n                    {\r\n                        title: 'Астраханская область',\r\n                        items: [\r\n                            {title: 'Астрахань', items: [\r\n                                    {title: 'Районы', items: [\r\n                                            {title: 'Ленинский'},\r\n                                            {title: 'Кировский'},\r\n                                            {title: 'Советский'},\r\n                                            {title: 'Трусовский'},\r\n                                        ]}\r\n                                ]},\r\n                            {title: 'Ахтубинкс'},\r\n                            {title: 'Нариманов'},\r\n                            {title: 'Камызяк'},\r\n                            {title: 'Харабали'},\r\n                        ]\r\n                    },\r\n                    {title: 'Ростовская область', items: [\r\n                            {title: 'Ростов'},\r\n                            {title: 'Миллерово'},\r\n                            {title: 'Сальск'},\r\n                            {title: 'Белая-Калитва'},\r\n                            {title: 'Примоско-Ахтавск'},\r\n                            {title: 'Новочерск'},\r\n                            {title: 'Донецк'},\r\n                            {title: 'Каменск-Шахтинский'},\r\n                            {title: 'Таганрог'},\r\n                        ]},\r\n                    {title: 'Волгоградская область', items: [\r\n                            {title: 'Волгоград'},\r\n                            {title: 'Волжский'},\r\n                            {title: 'Камышин'},\r\n                            {title: 'Урипинск'},\r\n                            {title: 'Колач на дону'},\r\n                            {title: 'Елань'},\r\n                            {title: 'Средняя Ахтуба'},\r\n                            {title: 'Жирновск'},\r\n                            {title: 'Городище'},\r\n                            {title: 'Фролово'},\r\n                            {title: 'Николаевск'},\r\n                            {title: 'Михайловка'},\r\n                        ]},\r\n                    {title: 'Краснодарский край', items: [\r\n                            {title: 'Краснодар'},\r\n                            {title: 'Тихорецк'},\r\n                            {title: 'Славинск на Кубани'},\r\n                            {title: 'Сочи'},\r\n                            {title: 'Анапа'},\r\n                            {title: 'Геленджик'},\r\n                            {title: 'Горячий ключ'},\r\n                            {title: 'Армавир'},\r\n                            {title: 'Кропткин'},\r\n                            {title: 'Белоченск'},\r\n                            {title: 'Тимашёвск'},\r\n                            {title: 'Крымск'},\r\n                        ]},\r\n                    {title: 'Республика Калмыкия', items: [\r\n                            {title: 'Элиста'},\r\n                            {title: 'Лагань'},\r\n                            {title: 'Приютное'},\r\n                            {title: 'Яшкуль'},\r\n                        ]},\r\n                    {title: 'Республика Адыгея', items: [\r\n                            {title: 'Майкоп'},\r\n                            {title: 'Адыгейск'}\r\n                        ]},\r\n                    {title: 'Республика крым', items: [\r\n                            {title: 'Ялта'},\r\n                            {title: 'Семферопль'},\r\n                            {title: 'Феадосия'},\r\n                            {title: 'Керчь'},\r\n                            {title: 'Алупка'},\r\n                            {title: 'Саки'},\r\n                            {title: 'Алушта'},\r\n                            {title: 'Алупка'},\r\n                            {title: 'Бахчисарай'},\r\n                            {title: 'Коктебель'},\r\n                            {title: 'Херсонес Таврический'},\r\n                            {title: 'Щелкино'},\r\n                            {title: 'Гаспра'},\r\n                            {title: 'Симеиз'},\r\n                            {title: 'Форос'},\r\n                            {title: 'Массандра'},\r\n                            {title: 'Портенит'},\r\n                            {title: 'Левадия'},\r\n                            {title: 'Мисхор'},\r\n                        ]},\r\n                    {title: 'Город Севастополь', items: []},\r\n\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\n\r\nconst addId = (count) => {\r\n    return function recF(arr) {\r\n        return arr.map(arr=> {\r\n            count++\r\n            if(arr.items){\r\n                return {...arr, id: count, items: [...recF(arr.items)]}\r\n            }\r\n            return {...arr, id: count}\r\n        })\r\n    }\r\n}\r\n\r\nlistArr = addId(1)(listArr);\r\n\r\n\r\n\r\nconst darkTheme = createTheme({\r\n    palette: {\r\n        mode: \"light\"\r\n    },\r\n});\r\n\r\nconst RecLIst = () => {\r\n    return (\r\n        <ThemeProvider theme={darkTheme}>\r\n            <Container>\r\n                <h1 style={{marginBottom: 30, marginTop: 30}}>RecРекурсивный список</h1>\r\n                <ul>\r\n                    {listArr.map(({title, items, id})=> {\r\n                        return (\r\n                            <li key={id}>\r\n                                <Lists title={title} items={items} />\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </Container>\r\n        </ThemeProvider>\r\n\r\n    );\r\n};\r\n\r\n\r\nconst Lists = ({title, items}) => {\r\n    return (\r\n        <Accordion>\r\n            <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n            >\r\n            <Typography>{title}</Typography>\r\n            </AccordionSummary>\r\n\r\n            {items.map(({title, items, id})=> {\r\n                if(items){\r\n                    return (\r\n\r\n                        <AccordionDetails key={id}>\r\n                            <Lists title={title} items={items}/>\r\n                        </AccordionDetails>\r\n                    )\r\n                }\r\n                else return (\r\n                    <AccordionDetails key={id}>\r\n                        <Typography>{title}</Typography>\r\n                    </AccordionDetails>\r\n                )\r\n\r\n            })}\r\n\r\n        </Accordion>\r\n    )\r\n}\r\n\r\nexport default RecLIst;\r\n\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport styled from 'styled-components';\r\nimport Input from '../UI/Input';\r\n\r\nconst validate = values => {\r\n\r\n    const errors = {}\r\n    if (!values.username) {\r\n        errors.username = 'Обязательное поле'\r\n    } else if (values.username.length > 15) {\r\n        errors.username = 'Must be 15 characters or less'\r\n    }\r\n    if (!values.email) {\r\n        errors.email = 'Обязательное поле'\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        errors.email = 'Invalid email address'\r\n    }\r\n    if (!values.age) {\r\n        errors.age = 'Обязательное поле'\r\n    } else if (isNaN(Number(values.age))) {\r\n        errors.age = 'Must be a number'\r\n    } else if (Number(values.age) < 18) {\r\n        errors.age = 'Sorry, you must be at least 18 years old'\r\n    }\r\n    return errors\r\n}\r\n\r\nconst ValidateForm = (props) => {\r\n\r\n    const { handleSubmit, submitting, pristine, reset } = props;\r\n\r\n\r\n\r\n    return (\r\n        <Wraper>\r\n            <h3>Форма валидации</h3>\r\n            <form onSubmit={handleSubmit}>\r\n                <Field\r\n                    name='username'\r\n                    label='Имя пользователя'\r\n                    placeholder='Введите ваше имя'\r\n                    type='text'\r\n                    component={Input}\r\n                />\r\n                <Field\r\n                    name='email'\r\n                    label='Email'\r\n                    placeholder='Введите ваш email'\r\n                    type='email'\r\n                    component={Input}\r\n                />\r\n                <Field\r\n                    name='age'\r\n                    label='Ваш возраст'\r\n                    placeholder='Укажите ваш возразст'\r\n                    type='number'\r\n                    component={Input}\r\n                />\r\n                <div>\r\n                    <button type=\"submit\" disabled={submitting}>Submit</button>\r\n                    <button type=\"button\" disabled={pristine || submitting} onClick={reset}>Clear Values</button>\r\n                </div>\r\n            </form>\r\n        </Wraper>\r\n    )\r\n}\r\n\r\n\r\nexport default reduxForm({ form: 'validate-form', validate })(ValidateForm);\r\n\r\n\r\nconst Wraper = styled.div`\r\n    margin-top: 50px;\r\n\r\n    background-color: white;\r\n    padding: 30px;\r\n    h3 {\r\n        margin-bottom: 30px;\r\n    }\r\n\r\n`;","import React from 'react';\r\n\r\nimport styled from 'styled-components';\r\n// import ContactForm from '../components/Forms/ContactForm';\r\nimport ValidateForm from '../components/Forms/ValidateForm';\r\nimport Container from '../components/UI/Container';\r\n\r\n\r\nconst ReduxForm = () => {\r\n\r\n    // const state = useSelector(state => state.form);\r\n\r\n    // const handleSubmit = (value) => {\r\n    //     console.log(value);\r\n    // }\r\n\r\n    const validateSubmit = (val) => {\r\n        console.log(val);\r\n    }\r\n\r\n    return (\r\n        <Wraper>\r\n            <Container>\r\n                <h1>Redux Form</h1>\r\n\r\n                {/* <ContactForm onSubmit={handleSubmit} /> */}\r\n                <ValidateForm onSubmit={validateSubmit} />\r\n\r\n            </Container>\r\n        </Wraper>\r\n    )\r\n}\r\n\r\nexport default ReduxForm;\r\n\r\nconst Wraper = styled.div`\r\n    padding: 50px;\r\n\r\n    & h1 {\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\n\r\n","import { Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Layout from './layouts/Layout';\nimport Books from './pages/Books';\nimport FinalForm from './pages/FinalForm/FinalForm';\nimport ReduxForm from './pages/ReduxForm';\nimport RecLIst from \"./pages/RecLIst\";\n\n\nconst b = {\n  foo: 1,\n  fee: 3\n}\n\nfunction App() {\n\n\n\n  return (\n    <Layout>\n      <Switch>\n        <Route path='/' exact ><Books a={b} /></Route>\n        <Route path='/redux-form'><ReduxForm /></Route>\n        <Route path='/final-form'><FinalForm title='Final form' /></Route>\n        <Route path='/rec-list'><RecLIst/></Route>\n      </Switch>\n    </Layout>\n  )\n}\n\nexport default App;\n\n\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const SET_ACCOUNT_FORM = 'SET_ACCOUNT_FORM';\r\n\r\n\r\n\r\n\r\n\r\nexport const account = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_ACCOUNT_FORM:\r\n            return {\r\n                data: action.data\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAccountForm = data => ({ type: SET_ACCOUNT_FORM, data });","import { combineReducers, createStore } from \"redux\";\r\nimport { account } from \"./redusers/reduxForm\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport dataForm from \"./redusers/datafinalform\";\r\n\r\n\r\nconst rootRedusers = combineReducers({\r\n    account,\r\n    dataForm,\r\n    form: formReducer\r\n});\r\n\r\nexport const store = createStore(rootRedusers);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}